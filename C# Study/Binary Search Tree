이진탐색트리는 이진트리의 모든 속성을 가짐과 동시에
중요한 또 하나의 속성을 가지고 있는데, 그것은 특정 노드에서 
자신의 노드보다 작은 값들은 모두 왼쪽에 있고, 
큰 값들은 모두 오른쪽에 위치한다는 점이다. 또한 중복된 값을 허락하지 않는다. 
따라서 전체 트리가 소트되어 있는 것과 같은 효과를 같게 되어 
검색에 있어 배열이나 이진트리처럼 순차적으로 모든 노드를 검색하는 것(O(n))이 아니라,
매 검색마다 검색영역을 절반으로 줄여 O(log n)으로 검색할 수 있게 된다.
하지만 노드들이 한쪽으로 일렬로 기울어진 Skewed Tree인 경우, 
검색영역을 n-1로만 줄이기 때문에 O(n)만큼의 시간이 소요된다.
즉, 예를 들어 소트된 데이터를 이진탐색트리에 추가하게 되면,
한쪽으로 치우쳐 진 트리가 생겨 검색시간이 O(n)으로 떨어지게 되는데, 
이러한 현상을 막기 위하여 노드 추가/갱신시 
트리 스스로 다시 밸런싱(Self balancing)하여검색 최적화를 유지할 수 있다.
이러한 트리를 Self-Balancing Binary Search Tree 또는 Balanced Search Tree라 하는데,
가장 보편적인 방식으로 AVL Tree, Red-Black Tree 등을 들 수 있다.

.NET에서 MAP ADT를 구현한 클래스로는
해시테이블을 이용한 Hashtable/Dictionary클래스,
이진검색트리를 이용한 SortedDictionary, 
그리고 배열을 이용한 SortedList 등이 있다.
