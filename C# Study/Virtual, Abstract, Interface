⨀ Virtual(가상)
- virtual 한정자는 메서드, 속성, 인덱서 또는 이벤트 선언을 한정하는데 사용한다. 

∘ 특징
- 파생된 클래스에서 재정의(Override)를 할 수 있는데, 이를 필수적으로 재정의 할 필요는 없다(선택 가능)
- 객체 생성이 가능하다.



⨀ Abstract(추상)
- abstract 한정자는 클래스, 메서드, 속성, 인덱서 및 이벤트에 사용할 수 있다. 
- 여러 클래스에서 공유할 기본적인 정의를 지정

∘ 특징
- 추상 클래스는 자체적으로 구현이 불가능 하고, 파생 클래스에서 반드시 구현해야 한다.
- 인스턴스화(객체 생성)가 불가능하다.



⨀ Interface(상속)
- 인터페이스에는 메서드, 속성, 이벤트 또는 인덱서의 시그니처만 포함된다. 
- 인터페이스를 구현하는 클래스는 인터페이스에 사용된 멤버를 구현해야 한다. 
- 여러 클래스에 공통적인 기능을 추가하기 위해 사용
 
∘ 특징
- 멤버필드(변수)를 사용할 수 없지만, 프로퍼티는 사용 가능
- 접근제한자는 public 만 사용가능
- 구현 불가능
- 멤버에는 접근자, 한정자 지원되지 않는다
- 다중 상속이 가능하다.(클래스는 다중 상속이 불가능)
- 인터페이스의 모든 메서드를 자식클래스에서 재정의 해야한다.
